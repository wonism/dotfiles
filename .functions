#!/usr/bin/env bash

# Make directory then change directory
function mkcd() {
  mkdir -p "$@" && cd "$_";
}

# Create a data URL from a file
function durl() {
  local mimeType=$(file -b --mime-type "$1");

  if [[ $mimeType == text/* ]]; then
    mimeType="${mimeType};charset=utf-8";
  fi

  local url="data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
  echo $url
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local port="${1:-8000}";
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port";
}

# Open Pull Request page on current work
function pr() {
  url=$(git config --get remote.origin.url)

  if [[ $url =~ "http" ]]; then
    url=$(echo $url | sed -e "s/\.git//")
  else
    url=$(echo $url | sed -e "s/\:/\//" -e "s/git@/https:\/\//" -e "s/\.git//")
  fi

  branch=$(git rev-parse --abbrev-ref HEAD)

  open $url/compare/$branch?expand=1
}

# Clear branches on current git repository
# except main, master, develop, alpha, beta, ...
function cb() {
  git branch | grep -v 'main\|master\|develop\|alpha|\beta' | awk '{cmd="git branch -D " $0; system(cmd)}'
}

# Youtube downloader
function ydl() {
  youtube-dl --geo-bypass $1
}

# Find text and replace it on current directory
function fr() {
  if [[ -z $2 ]]; then
    echo "Wrong inputs."
    exit 1
  fi

  # 1st arg: old string
  # 2nd arg: new string
  grep -r -l $(echo "$1") . | sort | uniq | xargs perl -e "s/$(echo "$1")/$(echo "$2")/" -pi;
}
